({
  "authorization": "<apikey>"
}).as(this, (has(state.cursor) && has(state.cursor.job_group_id) && has(state.cursor.job_group_action_id) && has(state.cursor.index) ?
  request("POST", state.url + "/pipeline/job/action/log/info")
  .with({
    "Header": {
      "Authorization": [this.authorization],
      "Content-Type": ["application/json"]
    },
    "Body": "{ \"src\": true, \"job_group_action_id\": " +
      string(state.cursor.job_group_action_id[state.cursor.index]) +
      ", \"job_group_id\": " +
      string(state.cursor.job_group_id[state.cursor.index]) +
      " }"
  })
:
  request("POST", state.url + "/pipeline/job/info")
  .with({
    "Header": {
      "Authorization": [this.authorization],
      "Content-Type": ["application/json"]
    },
    "Body": "{ \"id\": 16 }"
  })
)).do_request().Body.as(body, { 
  "body": body,
  "want_more_flag": !has(state.cursor) || 
    !has(state.cursor.index) ||
    !has(state.cursor.job_group_id) ||
    int(state.cursor.index) < state.cursor.job_group_id.size() - 1,
  "is_not_first": has(state.cursor) && has(state.cursor.job_group_id) && has(state.cursor.job_group_action_id) && has(state.cursor.index)
}).as(t, {
  "body": t.is_not_first ? t.body : bytes(t.body).decode_json(),
  "want_more_flag": t.want_more_flag,
  "is_not_first": t.is_not_first
}).as(context, {
  "events": [({
    "src": true,
    "job_group_action_id": bool(context.is_not_first) ? string(state.cursor.job_group_action_id[state.cursor.index]) : "",
    "job_group_id": bool(context.is_not_first) ? string(state.cursor.job_group_id[state.cursor.index]) : "",
    "message": bool(context.is_not_first) ? string(context.body) : "",
    "debug": state,
    "from": bool(context.is_not_first) ? "/pipeline/job/info" : "/pipeline/job/action/log/info"
  }).drop_empty()],
  "cursor": bool(context.want_more_flag) ? {
    "now": now,
    "id": bool(context.is_not_first) ? state.cursor.id : uuid(),
    "index": bool(context.is_not_first) ? int(state.cursor.index) + 1 : 0,
    "job_group_id": bool(context.is_not_first) ? 
        state.cursor.job_group_id 
      : 
        context.body.job_groups.map(g, g.job_group_actions.map(a, g.id)).flatten(),
    "job_group_action_id": bool(context.is_not_first) ? 
        state.cursor.job_group_action_id 
      : 
        context.body.job_groups.map(g, g.job_group_actions.map(a, a.id)).flatten()
  } : {},
  "want_more": bool(context.want_more_flag)
})